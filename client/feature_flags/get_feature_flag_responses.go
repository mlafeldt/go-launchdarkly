// Code generated by go-swagger; DO NOT EDIT.

package feature_flags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mlafeldt/launchdarkly-api-client/models"
)

// GetFeatureFlagReader is a Reader for the GetFeatureFlag structure.
type GetFeatureFlagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFeatureFlagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFeatureFlagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetFeatureFlagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFeatureFlagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFeatureFlagOK creates a GetFeatureFlagOK with default headers values
func NewGetFeatureFlagOK() *GetFeatureFlagOK {
	return &GetFeatureFlagOK{}
}

/*GetFeatureFlagOK handles this case with default header values.

Flag response.
*/
type GetFeatureFlagOK struct {
	Payload *models.FeatureFlag
}

func (o *GetFeatureFlagOK) Error() string {
	return fmt.Sprintf("[GET /flags/{projectKey}/{featureFlagKey}][%d] getFeatureFlagOK  %+v", 200, o.Payload)
}

func (o *GetFeatureFlagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FeatureFlag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFeatureFlagUnauthorized creates a GetFeatureFlagUnauthorized with default headers values
func NewGetFeatureFlagUnauthorized() *GetFeatureFlagUnauthorized {
	return &GetFeatureFlagUnauthorized{}
}

/*GetFeatureFlagUnauthorized handles this case with default header values.

Invalid access token.
*/
type GetFeatureFlagUnauthorized struct {
}

func (o *GetFeatureFlagUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flags/{projectKey}/{featureFlagKey}][%d] getFeatureFlagUnauthorized ", 401)
}

func (o *GetFeatureFlagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFeatureFlagNotFound creates a GetFeatureFlagNotFound with default headers values
func NewGetFeatureFlagNotFound() *GetFeatureFlagNotFound {
	return &GetFeatureFlagNotFound{}
}

/*GetFeatureFlagNotFound handles this case with default header values.

Invalid resource specifier.
*/
type GetFeatureFlagNotFound struct {
}

func (o *GetFeatureFlagNotFound) Error() string {
	return fmt.Sprintf("[GET /flags/{projectKey}/{featureFlagKey}][%d] getFeatureFlagNotFound ", 404)
}

func (o *GetFeatureFlagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
