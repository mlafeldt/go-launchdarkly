// Code generated by go-swagger; DO NOT EDIT.

package user_segments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mlafeldt/launchdarkly-api-client/models"
)

// GetUserSegmentReader is a Reader for the GetUserSegment structure.
type GetUserSegmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserSegmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserSegmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetUserSegmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUserSegmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserSegmentOK creates a GetUserSegmentOK with default headers values
func NewGetUserSegmentOK() *GetUserSegmentOK {
	return &GetUserSegmentOK{}
}

/*GetUserSegmentOK handles this case with default header values.

User segment response.
*/
type GetUserSegmentOK struct {
	Payload *models.UserSegment
}

func (o *GetUserSegmentOK) Error() string {
	return fmt.Sprintf("[GET /segments/{projectKey}/{environmentKey}/{userSegmentKey}][%d] getUserSegmentOK  %+v", 200, o.Payload)
}

func (o *GetUserSegmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserSegment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSegmentUnauthorized creates a GetUserSegmentUnauthorized with default headers values
func NewGetUserSegmentUnauthorized() *GetUserSegmentUnauthorized {
	return &GetUserSegmentUnauthorized{}
}

/*GetUserSegmentUnauthorized handles this case with default header values.

Invalid access token.
*/
type GetUserSegmentUnauthorized struct {
}

func (o *GetUserSegmentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /segments/{projectKey}/{environmentKey}/{userSegmentKey}][%d] getUserSegmentUnauthorized ", 401)
}

func (o *GetUserSegmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserSegmentNotFound creates a GetUserSegmentNotFound with default headers values
func NewGetUserSegmentNotFound() *GetUserSegmentNotFound {
	return &GetUserSegmentNotFound{}
}

/*GetUserSegmentNotFound handles this case with default header values.

Invalid resource specifier.
*/
type GetUserSegmentNotFound struct {
}

func (o *GetUserSegmentNotFound) Error() string {
	return fmt.Sprintf("[GET /segments/{projectKey}/{environmentKey}/{userSegmentKey}][%d] getUserSegmentNotFound ", 404)
}

func (o *GetUserSegmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
