// Code generated by go-swagger; DO NOT EDIT.

package team_members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mlafeldt/launchdarkly-api-client/models"
)

// NewPatchMemberParams creates a new PatchMemberParams object
// with the default values initialized.
func NewPatchMemberParams() *PatchMemberParams {
	var ()
	return &PatchMemberParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchMemberParamsWithTimeout creates a new PatchMemberParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchMemberParamsWithTimeout(timeout time.Duration) *PatchMemberParams {
	var ()
	return &PatchMemberParams{

		timeout: timeout,
	}
}

// NewPatchMemberParamsWithContext creates a new PatchMemberParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchMemberParamsWithContext(ctx context.Context) *PatchMemberParams {
	var ()
	return &PatchMemberParams{

		Context: ctx,
	}
}

// NewPatchMemberParamsWithHTTPClient creates a new PatchMemberParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchMemberParamsWithHTTPClient(client *http.Client) *PatchMemberParams {
	var ()
	return &PatchMemberParams{
		HTTPClient: client,
	}
}

/*PatchMemberParams contains all the parameters to send to the API endpoint
for the patch member operation typically these are written to a http.Request
*/
type PatchMemberParams struct {

	/*MemberID
	  The member ID.

	*/
	MemberID string
	/*PatchDelta
	  Requires a JSON Patch representation of the desired changes to the project. 'http://jsonpatch.com/'

	*/
	PatchDelta []*models.PatchOperation

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch member params
func (o *PatchMemberParams) WithTimeout(timeout time.Duration) *PatchMemberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch member params
func (o *PatchMemberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch member params
func (o *PatchMemberParams) WithContext(ctx context.Context) *PatchMemberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch member params
func (o *PatchMemberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch member params
func (o *PatchMemberParams) WithHTTPClient(client *http.Client) *PatchMemberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch member params
func (o *PatchMemberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMemberID adds the memberID to the patch member params
func (o *PatchMemberParams) WithMemberID(memberID string) *PatchMemberParams {
	o.SetMemberID(memberID)
	return o
}

// SetMemberID adds the memberId to the patch member params
func (o *PatchMemberParams) SetMemberID(memberID string) {
	o.MemberID = memberID
}

// WithPatchDelta adds the patchDelta to the patch member params
func (o *PatchMemberParams) WithPatchDelta(patchDelta []*models.PatchOperation) *PatchMemberParams {
	o.SetPatchDelta(patchDelta)
	return o
}

// SetPatchDelta adds the patchDelta to the patch member params
func (o *PatchMemberParams) SetPatchDelta(patchDelta []*models.PatchOperation) {
	o.PatchDelta = patchDelta
}

// WriteToRequest writes these params to a swagger request
func (o *PatchMemberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param memberId
	if err := r.SetPathParam("memberId", o.MemberID); err != nil {
		return err
	}

	if o.PatchDelta != nil {
		if err := r.SetBodyParam(o.PatchDelta); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
