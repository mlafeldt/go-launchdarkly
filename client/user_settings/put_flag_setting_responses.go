// Code generated by go-swagger; DO NOT EDIT.

package user_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// PutFlagSettingReader is a Reader for the PutFlagSetting structure.
type PutFlagSettingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutFlagSettingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutFlagSettingNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutFlagSettingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutFlagSettingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutFlagSettingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutFlagSettingNoContent creates a PutFlagSettingNoContent with default headers values
func NewPutFlagSettingNoContent() *PutFlagSettingNoContent {
	return &PutFlagSettingNoContent{}
}

/*PutFlagSettingNoContent handles this case with default header values.

Action completed successfully.
*/
type PutFlagSettingNoContent struct {
}

func (o *PutFlagSettingNoContent) Error() string {
	return fmt.Sprintf("[PUT /users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}][%d] putFlagSettingNoContent ", 204)
}

func (o *PutFlagSettingNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutFlagSettingBadRequest creates a PutFlagSettingBadRequest with default headers values
func NewPutFlagSettingBadRequest() *PutFlagSettingBadRequest {
	return &PutFlagSettingBadRequest{}
}

/*PutFlagSettingBadRequest handles this case with default header values.

Invalid request body.
*/
type PutFlagSettingBadRequest struct {
}

func (o *PutFlagSettingBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}][%d] putFlagSettingBadRequest ", 400)
}

func (o *PutFlagSettingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutFlagSettingUnauthorized creates a PutFlagSettingUnauthorized with default headers values
func NewPutFlagSettingUnauthorized() *PutFlagSettingUnauthorized {
	return &PutFlagSettingUnauthorized{}
}

/*PutFlagSettingUnauthorized handles this case with default header values.

Invalid access token.
*/
type PutFlagSettingUnauthorized struct {
}

func (o *PutFlagSettingUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}][%d] putFlagSettingUnauthorized ", 401)
}

func (o *PutFlagSettingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutFlagSettingNotFound creates a PutFlagSettingNotFound with default headers values
func NewPutFlagSettingNotFound() *PutFlagSettingNotFound {
	return &PutFlagSettingNotFound{}
}

/*PutFlagSettingNotFound handles this case with default header values.

Invalid resource specifier.
*/
type PutFlagSettingNotFound struct {
}

func (o *PutFlagSettingNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}][%d] putFlagSettingNotFound ", 404)
}

func (o *PutFlagSettingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutFlagSettingBody put flag setting body
swagger:model PutFlagSettingBody
*/
type PutFlagSettingBody struct {

	// The variation value to set for the user. Must match the variation type of the flag.
	//
	Setting bool `json:"setting,omitempty"`
}

// Validate validates this put flag setting body
func (o *PutFlagSettingBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutFlagSettingBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutFlagSettingBody) UnmarshalBinary(b []byte) error {
	var res PutFlagSettingBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
