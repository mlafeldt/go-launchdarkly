// Code generated by go-swagger; DO NOT EDIT.

package team_members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostMembersParams creates a new PostMembersParams object
// with the default values initialized.
func NewPostMembersParams() *PostMembersParams {
	var ()
	return &PostMembersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostMembersParamsWithTimeout creates a new PostMembersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostMembersParamsWithTimeout(timeout time.Duration) *PostMembersParams {
	var ()
	return &PostMembersParams{

		timeout: timeout,
	}
}

// NewPostMembersParamsWithContext creates a new PostMembersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostMembersParamsWithContext(ctx context.Context) *PostMembersParams {
	var ()
	return &PostMembersParams{

		Context: ctx,
	}
}

// NewPostMembersParamsWithHTTPClient creates a new PostMembersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostMembersParamsWithHTTPClient(client *http.Client) *PostMembersParams {
	var ()
	return &PostMembersParams{
		HTTPClient: client,
	}
}

/*PostMembersParams contains all the parameters to send to the API endpoint
for the post members operation typically these are written to a http.Request
*/
type PostMembersParams struct {

	/*MembersBody
	  New members to invite.

	*/
	MembersBody []*PostMembersParamsBodyItems0

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post members params
func (o *PostMembersParams) WithTimeout(timeout time.Duration) *PostMembersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post members params
func (o *PostMembersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post members params
func (o *PostMembersParams) WithContext(ctx context.Context) *PostMembersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post members params
func (o *PostMembersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post members params
func (o *PostMembersParams) WithHTTPClient(client *http.Client) *PostMembersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post members params
func (o *PostMembersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMembersBody adds the membersBody to the post members params
func (o *PostMembersParams) WithMembersBody(membersBody []*PostMembersParamsBodyItems0) *PostMembersParams {
	o.SetMembersBody(membersBody)
	return o
}

// SetMembersBody adds the membersBody to the post members params
func (o *PostMembersParams) SetMembersBody(membersBody []*PostMembersParamsBodyItems0) {
	o.MembersBody = membersBody
}

// WriteToRequest writes these params to a swagger request
func (o *PostMembersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MembersBody != nil {
		if err := r.SetBodyParam(o.MembersBody); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
