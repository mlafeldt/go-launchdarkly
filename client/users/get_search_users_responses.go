// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mlafeldt/launchdarkly-api-client/models"
)

// GetSearchUsersReader is a Reader for the GetSearchUsers structure.
type GetSearchUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSearchUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSearchUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSearchUsersOK creates a GetSearchUsersOK with default headers values
func NewGetSearchUsersOK() *GetSearchUsersOK {
	return &GetSearchUsersOK{}
}

/*GetSearchUsersOK handles this case with default header values.

Users response.
*/
type GetSearchUsersOK struct {
	Payload *models.Users
}

func (o *GetSearchUsersOK) Error() string {
	return fmt.Sprintf("[GET /user-search/{projectKey}/{environmentKey}][%d] getSearchUsersOK  %+v", 200, o.Payload)
}

func (o *GetSearchUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Users)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchUsersUnauthorized creates a GetSearchUsersUnauthorized with default headers values
func NewGetSearchUsersUnauthorized() *GetSearchUsersUnauthorized {
	return &GetSearchUsersUnauthorized{}
}

/*GetSearchUsersUnauthorized handles this case with default header values.

Invalid access token.
*/
type GetSearchUsersUnauthorized struct {
}

func (o *GetSearchUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user-search/{projectKey}/{environmentKey}][%d] getSearchUsersUnauthorized ", 401)
}

func (o *GetSearchUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
